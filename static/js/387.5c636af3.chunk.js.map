{"version":3,"file":"static/js/387.5c636af3.chunk.js","mappings":"+JAEaA,E,QAAaC,GAAAA,OAAH,qoB,4LCAVC,EAAgBD,EAAAA,GAAAA,GAAH,kTAabE,EAAYF,EAAAA,GAAAA,IAAH,mEAKTG,EAAYH,EAAAA,GAAAA,IAAH,oIAQTI,EAASJ,EAAAA,GAAAA,EAAH,wE,kBCpBJ,SAASK,IACpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAIMC,EAAcJ,EAAUF,EAAOA,EAAKO,MAAM,EAAG,KAEnDC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,oGAEQH,GAAW,GAFnB,UAIgCI,EAAAA,EAAAA,IAAkBZ,GAJlD,OAIca,EAJd,OAKQT,EAAQS,GALhB,gDAQQC,QAAQC,IAAR,MARR,yBAUQP,GAAW,GAVnB,qFADY,uBAAC,WAAD,wBAeZQ,EAEH,GAAE,CAAChB,IAMJ,OACI,gCACKO,IAAW,SAACU,EAAA,EAAD,KAEX,SAACtB,EAAD,UACIc,EAAYS,OAAS,EAClBT,EAAYU,KAAI,SAAAC,GAAI,OAChB,UAAC,KAAD,YACI,SAACxB,EAAD,CAAWyB,IAAKD,EAAKE,aAnC7B,kCAmCuDF,EAAKE,aAlCzD,kEAkCqFC,IAAKH,EAAKI,QAC1F,UAAC3B,EAAD,YACI,wBAAKuB,EAAKI,QACV,yBAAG,cAAgC,KAAnBJ,EAAKK,UAAmB,QAAUL,EAAKK,kBAJ7CL,EAAKM,GADP,KASpB,SAAC5B,EAAD,UAAQ,eAGfK,EAAKe,OAAS,KACX,SAACzB,EAAA,EAAD,CAAYkC,QAvBD,WACnBrB,GAAYD,EACf,EAqBW,SACKA,EAAU,OAAS,gBAKvC,C,qIChEYuB,EAAclC,EAAAA,GAAAA,GAAH,wWAcXE,EAAYF,EAAAA,GAAAA,IAAH,mEAKTmC,EAAYnC,EAAAA,GAAAA,GAAH,wI,mMCnBtBoC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAGCC,EAAmB,mCAAG,oGACRF,EAAAA,EAAAA,IAAA,oCAAuCC,IAD/B,cACzBE,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKnBC,EAAc,mCAAG,WAAOnC,GAAP,uFACH8B,EAAAA,EAAAA,IAAA,gBAAmB9B,EAAnB,oBAAsC+B,IADnC,cACpBE,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKdE,EAAiB,mCAAG,WAAOC,GAAP,uFACNP,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,kBAA+CM,IADzC,cACvBJ,EADuB,yBAEtBA,EAASC,KAAKI,SAFQ,2CAAH,sDAKjB1B,EAAiB,mCAAG,WAAOZ,GAAP,uFACN8B,EAAAA,EAAAA,IAAA,gBAAmB9B,EAAnB,4BAA8C+B,IADxC,cACvBE,EADuB,yBAEtBA,EAASC,KAAK/B,MAFQ,2CAAH,sDAKjBoC,EAAiB,mCAAG,WAAOvC,GAAP,uFACN8B,EAAAA,EAAAA,IAAA,gBAAmB9B,EAAnB,oCAAsD+B,IADhD,cACvBE,EADuB,yBAEtBA,EAASC,KAAKI,SAFQ,2CAAH,qD","sources":["components/BackLink/MainButton.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/MovieShortDetails/MovieShortDetails.styled.js","moviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MainButton = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 12px;\n    min-width: 180px;\n    font-size: 20px;\n    line-height: 24px;\n    font-weight: 600;\n    padding: 8px 16px;\n    border-radius: 8px;\n    color: #fff;\n    background-color: inherit;\n    cursor: pointer;\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.22),\n                0px 2px 2px 0px rgba(0, 0, 0, 0.16), \n                0px 1px 5px 0px rgba(0, 0, 0, 0.14);\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover,\n    &:focus {\n        color: #FFA500;\n        transform: scale(1.05);\n    }\n`;","import styled from 'styled-components';\n\nexport const ImagesGallery = styled.ul`\n    display: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n    grid-gap: 16px;\n    margin-top: 16px;\n    margin-bottom: 16px;\n    padding: 0;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n`;\n\nexport const ItemImage = styled.img`\n    width: 100%;\n    border-radius: 8px;\n`;\n\nexport const ActorInfo = styled.div`\n    display: flex;\n    text-align: center;\n    flex-direction: column;\n    gap: 4px;\n    padding: 4px;\n`;\n\nexport const NoCast = styled.p`\n    font-weight: bold;\n    margin-left: 16px;\n`;","import { Loader } from \"components/Loader/Loader\";\nimport { GalleryItem } from \"components/MovieShortDetails/MovieShortDetails.styled\";\nimport { fetchMovieCredits } from \"moviesAPI\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ActorInfo, ImagesGallery, ItemImage, NoCast } from \"./Cast.styled\";\nimport { MainButton } from \"components/BackLink/MainButton\";\n\nexport default function Cast() {\n    const { movieID } = useParams();\n    const [cast, setCast] = useState([]);\n    const [showAll, setShowAll] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n    const defaultImg = 'https://image.tmdb.org/t/p/w500/esN9CxXr5C4h7YHY3Om1qOexbxq.jpg';\n    const visibleCast = showAll ? cast : cast.slice(0, 16);\n\n    useEffect(() => {\n        async function getMovieCredits() {\n            try {\n                setLoading(true);\n\n                const castMovie = await fetchMovieCredits(movieID);\n                setCast(castMovie);\n\n            } catch (error) {\n                console.log(error);\n            } finally {\n                setLoading(false);\n            };\n        };\n\n        getMovieCredits();\n        \n    }, [movieID]);\n\n    const handlerShowAll = () => {\n        setShowAll(!showAll);\n    };\n\n    return (\n        <>\n            {loading && <Loader />}\n\n            {<ImagesGallery>\n                {visibleCast.length > 0 ? (\n                    visibleCast.map(item => (\n                        <GalleryItem key={item.id}>\n                            <ItemImage src={item.profile_path ? (IMG_URL + item.profile_path) : defaultImg} alt={item.name} />\n                            <ActorInfo>\n                                <h3>{item.name}</h3>\n                                <p>Character: {(item.character === \"\" ? \"Other\" : item.character)}</p>\n                            </ActorInfo>\n                        </GalleryItem>\n                    ))\n                ) : <NoCast>No info!</NoCast>}\n            </ImagesGallery>}\n\n            {cast.length > 16 && (\n                <MainButton onClick={handlerShowAll}>\n                    {showAll ? \"Hide\" : \"Show more\"}\n                </MainButton>\n            )}\n        </>\n    );\n};","import styled from \"styled-components\";\n\nexport const GalleryItem = styled.li`\n    border-radius: 8px;\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.22),\n                0px 1px 1px 0px rgba(0, 0, 0, 0.16), \n                0px 2px 1px -1px rgba(0, 0, 0, 0.14);\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    object-fit: cover;\n\n\n    &:hover {\n        transform: scale(1.05);\n    };\n`;\n\nexport const ItemImage = styled.img`\n    width: 100%;\n    border-radius: 8px;\n`;\n\nexport const ItemTitle = styled.h2`\n    font-size: 24px;\n    font-weight: bold;\n    text-align: center;\n    margin: 12px auto;\n    color: #fff;\n`;\n\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = \"fc9b2ba3c1d7d66208afaa93dbd87a11\";\n\n\nexport const fetchTrendingMovies = async () => {\n    const responce = await axios.get(`trending/all/week?api_key=${KEY}`);\n    return responce.data;\n};\n\nexport const fetchMovieByID = async (movieID) => {\n    const responce = await axios.get(`movie/${movieID}?api_key=${KEY}`);\n    return responce.data;\n};\n\nexport const fetchSearchMovies = async (query) => {\n    const responce = await axios.get(`search/movie?api_key=${KEY}&query=${query}`);\n    return responce.data.results;\n};\n\nexport const fetchMovieCredits = async (movieID) => {\n    const responce = await axios.get(`movie/${movieID}/credits?api_key=${KEY}`);\n    return responce.data.cast;\n};\n\nexport const fetchMovieReviews = async (movieID) => {\n    const responce = await axios.get(`movie/${movieID}/reviews?&page=1&api_key=${KEY}`);\n    return responce.data.results;\n};"],"names":["MainButton","styled","ImagesGallery","ItemImage","ActorInfo","NoCast","Cast","movieID","useParams","useState","cast","setCast","showAll","setShowAll","loading","setLoading","visibleCast","slice","useEffect","fetchMovieCredits","castMovie","console","log","getMovieCredits","Loader","length","map","item","src","profile_path","alt","name","character","id","onClick","GalleryItem","ItemTitle","axios","KEY","fetchTrendingMovies","responce","data","fetchMovieByID","fetchSearchMovies","query","results","fetchMovieReviews"],"sourceRoot":""}