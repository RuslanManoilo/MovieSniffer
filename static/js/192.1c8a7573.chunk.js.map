{"version":3,"file":"static/js/192.1c8a7573.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAGCC,EAAmB,mCAAG,oGACRF,EAAAA,EAAAA,IAAA,oCAAuCC,IAD/B,cACzBE,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKnBC,EAAc,mCAAG,WAAOC,GAAP,uFACHN,EAAAA,EAAAA,IAAA,gBAAmBM,EAAnB,oBAAsCL,IADnC,cACpBE,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKdG,EAAiB,mCAAG,WAAOC,GAAP,uFACNR,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,kBAA+CO,IADzC,cACvBL,EADuB,yBAEtBA,EAASC,KAAKK,SAFQ,2CAAH,sDAKjBC,EAAiB,mCAAG,WAAOJ,GAAP,uFACNN,EAAAA,EAAAA,IAAA,gBAAmBM,EAAnB,4BAA8CL,IADxC,cACvBE,EADuB,yBAEtBA,EAASC,KAAKO,MAFQ,2CAAH,sDAKjBC,EAAiB,mCAAG,WAAON,GAAP,uFACNN,EAAAA,EAAAA,IAAA,gBAAmBM,EAAnB,oCAAsDL,IADhD,cACvBE,EADuB,yBAEtBA,EAASC,KAAKK,SAFQ,2CAAH,qD,uJCxBjBI,EAAW,SAAC,GAAkB,IAAD,IAAfC,GAAAA,OAAe,MAAV,IAAU,EACtC,OACI,SAAC,KAAD,CAAMA,GAAIA,EAAV,UACI,4BAAQ,aAGnB,ECJYC,EAAY,SAAC,GASnB,IAAD,QARFC,KACIC,EAOF,EAPEA,MACAC,EAMF,EANEA,YACAC,EAKF,EALEA,aACAC,EAIF,EAJEA,aACAC,EAGF,EAHEA,SACAC,EAEF,EAFEA,KACAC,EACF,EADEA,OAEEC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAM3D,OACI,iCACI,SAAChB,EAAD,CAAUC,GAAIY,EAAoBI,WAElC,4BACI,gBAAKC,IAAKb,EATN,kCAS+BA,EAR5B,6DAQuDc,IAAKf,GAASK,KAC5E,wBAAKL,GAASK,KAEd,yBAAG,WAASF,MACZ,yBAAG,iBAAeD,MAElB,wBAAI,cACJ,uBAAIE,KAEJ,wBAAI,YACJ,uBAAIE,EAAOU,KAAI,SAAAC,GAAI,OAAIA,EAAKZ,IAAT,IAAea,KAAK,YAItD,E,kBChCc,SAASC,IACpB,IAAQ9B,GAAY+B,EAAAA,EAAAA,MAAZ/B,QACR,GAA0BgC,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,oGAEQH,GAAW,GACXE,GAAS,GAHjB,UAKgCvC,EAAAA,EAAAA,IAAeC,GAL/C,OAKcwC,EALd,OAMQN,EAASM,GANjB,gDAQQF,GAAS,GARjB,yBAUQF,GAAW,GAVnB,qFADY,uBAAC,WAAD,wBAeZK,EAEH,GAAE,CAACzC,KAGA,gCACKmC,IAAW,SAACO,EAAA,EAAD,IACXL,IAAS,SAACM,EAAA,EAAD,IAETV,IAAS,SAACxB,EAAD,CAAWC,KAAMuB,KAE3B,4BACI,wBAAI,4BACJ,2BACI,SAAC,KAAD,CAAMzB,GAAG,OAAT,SAAgB,UAChB,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,gBAGvB,SAAC,EAAAoC,SAAD,CAAUC,UAAU,SAACH,EAAA,EAAD,IAApB,UACI,SAAC,KAAD,WAKnB,C","sources":["moviesAPI.js","components/BackLink/BackLink.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = \"fc9b2ba3c1d7d66208afaa93dbd87a11\";\n\n\nexport const fetchTrendingMovies = async () => {\n    const responce = await axios.get(`trending/all/week?api_key=${KEY}`);\n    return responce.data;\n};\n\nexport const fetchMovieByID = async (movieID) => {\n    const responce = await axios.get(`movie/${movieID}?api_key=${KEY}`);\n    return responce.data;\n};\n\nexport const fetchSearchMovies = async (query) => {\n    const responce = await axios.get(`search/movie?api_key=${KEY}&query=${query}`);\n    return responce.data.results;\n};\n\nexport const fetchMovieCredits = async (movieID) => {\n    const responce = await axios.get(`movie/${movieID}/credits?api_key=${KEY}`);\n    return responce.data.cast;\n};\n\nexport const fetchMovieReviews = async (movieID) => {\n    const responce = await axios.get(`movie/${movieID}/reviews?&page=1&api_key=${KEY}`);\n    return responce.data.results;\n};","import { Link } from \"react-router-dom\";\n\nexport const BackLink = ({ to = '/' }) => {\n    return (\n        <Link to={to}>\n            <button>Go back</button>\n        </Link>\n    );\n};","import { useLocation } from \"react-router-dom\";\nimport { BackLink } from \"../BackLink/BackLink\";\nimport { useRef } from \"react\";\n\nexport const MovieInfo = ({\n    info: {\n        title,\n        poster_path,\n        release_date,\n        vote_average,\n        overview,\n        name,\n        genres }\n}) => {\n    const location = useLocation();\n    const backLinkLocationRef = useRef(location.state?.from ?? '/');\n    \n    const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n    const defaultImg = 'https://www.reelviews.net/resources/img/default_poster.jpg';\n\n\n    return (\n        <>\n            <BackLink to={backLinkLocationRef.current} />\n\n            <div>\n                <img src={poster_path ? (IMG_URL + poster_path) : defaultImg} alt={title || name} />\n                <h2>{title || name}</h2>\n\n                <p>Rating: {vote_average}</p>\n                <p>Release date: {release_date}</p>\n\n                <h3>Overview</h3>\n                <p>{overview}</p>\n\n                <h3>Genres</h3>\n                <p>{genres.map(item => item.name).join(' ')}</p>\n            </div>\n        </>\n    );\n};","import { Suspense } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Link, Outlet, useParams } from \"react-router-dom\";\nimport { fetchMovieByID } from \"moviesAPI\";\nimport { MovieInfo } from \"components/MovieInfo/MovieInfo\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { NotFound } from \"components/NotFound/NotFound\";\n\nexport default function MovieDetails() {\n    const { movieID } = useParams();\n    const [movie, setMovie] = useState();\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        async function getMovie() {\n            try {\n                setLoading(true);\n                setError(false);\n\n                const infoMovie = await fetchMovieByID(movieID);\n                setMovie(infoMovie);\n            } catch (error) {\n                setError(true);\n            } finally {\n                setLoading(false);\n            };\n        };\n\n        getMovie();\n\n    }, [movieID]);\n\n    return (\n        <>\n            {loading && <Loader />}\n            {error && <NotFound />}\n\n            {movie && <MovieInfo info={movie} />}\n\n            <div>\n                <h2>Additional information</h2>\n                <ul>\n                    <Link to=\"cast\">Cast</Link>\n                    <Link to=\"reviews\">Reviews</Link>\n                </ul>\n\n                <Suspense fallback={<Loader />}>\n                    <Outlet />\n                </Suspense>\n            </div>\n        </>\n    );\n};"],"names":["axios","KEY","fetchTrendingMovies","responce","data","fetchMovieByID","movieID","fetchSearchMovies","query","results","fetchMovieCredits","cast","fetchMovieReviews","BackLink","to","MovieInfo","info","title","poster_path","release_date","vote_average","overview","name","genres","location","useLocation","backLinkLocationRef","useRef","state","from","current","src","alt","map","item","join","MovieDetails","useParams","useState","movie","setMovie","loading","setLoading","error","setError","useEffect","infoMovie","getMovie","Loader","NotFound","Suspense","fallback"],"sourceRoot":""}