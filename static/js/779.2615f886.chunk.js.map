{"version":3,"file":"static/js/779.2615f886.chunk.js","mappings":"wQAEaA,EAAcC,EAAAA,GAAAA,GAAH,gHAOXC,EAAYD,EAAAA,GAAAA,EAAH,+F,SCHP,SAASE,IACpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,oGAEQD,GAAW,GAFnB,UAIiCE,EAAAA,EAAAA,IAAkBR,GAJnD,OAIcS,EAJd,OAKQL,EAAWK,GALnB,gDAQQC,QAAQC,IAAR,MARR,yBAUQL,GAAW,GAVnB,qFADY,uBAAC,WAAD,wBAeZM,EAEH,GAAE,CAACZ,KAGA,gCACKK,IAAW,SAACQ,EAAA,EAAD,IAEQ,IAAnBV,EAAQW,QACL,SAAChB,EAAD,UAAW,cAEV,SAACF,EAAD,UACIO,EAAQY,KAAI,SAAAC,GAAI,OACb,2BACI,0BAAI,UAAQA,EAAKC,WACjB,uBAAID,EAAKE,YAFJF,EAAKG,GADD,QAUpC,C,mMC9CDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAGCC,EAAmB,mCAAG,oGACRF,EAAAA,EAAAA,IAAA,oCAAuCC,IAD/B,cACzBE,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKnBC,EAAc,mCAAG,WAAOzB,GAAP,uFACHoB,EAAAA,EAAAA,IAAA,gBAAmBpB,EAAnB,oBAAsCqB,IADnC,cACpBE,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKdE,EAAiB,mCAAG,WAAOC,GAAP,uFACNP,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,kBAA+CM,IADzC,cACvBJ,EADuB,yBAEtBA,EAASC,KAAKI,SAFQ,2CAAH,sDAKjBC,EAAiB,mCAAG,WAAO7B,GAAP,uFACNoB,EAAAA,EAAAA,IAAA,gBAAmBpB,EAAnB,4BAA8CqB,IADxC,cACvBE,EADuB,yBAEtBA,EAASC,KAAKM,MAFQ,2CAAH,sDAKjBtB,EAAiB,mCAAG,WAAOR,GAAP,uFACNoB,EAAAA,EAAAA,IAAA,gBAAmBpB,EAAnB,oCAAsDqB,IADhD,cACvBE,EADuB,yBAEtBA,EAASC,KAAKI,SAFQ,2CAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","moviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListReviews = styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n    margin-top: 16px;\n`;\n\nexport const NoReviews = styled.p`\n    font-weight: bold;\n    margin-top: 16px;\n    margin-left: 16px;\n`;","import { Loader } from \"components/Loader/Loader\";\nimport { fetchMovieReviews } from \"moviesAPI\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ListReviews, NoReviews } from \"./Reviews.styled\";\n\nexport default function Reviews() {\n    const { movieID } = useParams();\n    const [reviews, setReviews] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        async function getReviews() {\n            try {\n                setLoading(true);\n\n                const allReviews = await fetchMovieReviews(movieID);\n                setReviews(allReviews);\n\n            } catch (error) {\n                console.log(error);\n            } finally {\n                setLoading(false);\n            };\n        };\n\n        getReviews();\n\n    }, [movieID]);\n\n    return (\n        <>\n            {loading && <Loader />}\n            \n            {reviews.length === 0 ?\n                <NoReviews>No info!</NoReviews>\n                :\n                (<ListReviews>\n                    {reviews.map(item => (\n                        <li key={item.id}>\n                            <h3>Autor: {item.author}</h3>\n                            <p>{item.content}</p>\n                        </li>\n                    ))}\n                </ListReviews>)\n            }\n        </>\n    );\n};","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = \"fc9b2ba3c1d7d66208afaa93dbd87a11\";\n\n\nexport const fetchTrendingMovies = async () => {\n    const responce = await axios.get(`trending/all/week?api_key=${KEY}`);\n    return responce.data;\n};\n\nexport const fetchMovieByID = async (movieID) => {\n    const responce = await axios.get(`movie/${movieID}?api_key=${KEY}`);\n    return responce.data;\n};\n\nexport const fetchSearchMovies = async (query) => {\n    const responce = await axios.get(`search/movie?api_key=${KEY}&query=${query}`);\n    return responce.data.results;\n};\n\nexport const fetchMovieCredits = async (movieID) => {\n    const responce = await axios.get(`movie/${movieID}/credits?api_key=${KEY}`);\n    return responce.data.cast;\n};\n\nexport const fetchMovieReviews = async (movieID) => {\n    const responce = await axios.get(`movie/${movieID}/reviews?&page=1&api_key=${KEY}`);\n    return responce.data.results;\n};"],"names":["ListReviews","styled","NoReviews","Reviews","movieID","useParams","useState","reviews","setReviews","loading","setLoading","useEffect","fetchMovieReviews","allReviews","console","log","getReviews","Loader","length","map","item","author","content","id","axios","KEY","fetchTrendingMovies","responce","data","fetchMovieByID","fetchSearchMovies","query","results","fetchMovieCredits","cast"],"sourceRoot":""}