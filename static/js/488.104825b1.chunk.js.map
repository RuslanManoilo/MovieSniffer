{"version":3,"file":"static/js/488.104825b1.chunk.js","mappings":"kNAGaA,EAAoB,SAAC,GAAiD,IAAD,IAA9CC,MAASC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,YAEpDC,GAAWC,EAAAA,EAAAA,MAKjB,OACI,SAAC,KAAD,WACI,UAAC,KAAD,CAAMC,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMJ,GAA1C,WACI,SAAC,KAAD,CAAWK,IAAKN,EANZ,kCAMqCA,EALlC,6DAK6DO,IAAKV,GAASC,KAClF,SAAC,KAAD,UAAYD,GAASC,QAIpC,C,qIChBYU,EAAcC,EAAAA,GAAAA,GAAH,wWAcXC,EAAYD,EAAAA,GAAAA,IAAH,mEAKTE,EAAYF,EAAAA,GAAAA,GAAH,wI,sECnBTG,E,QAAgBH,GAAAA,GAAH,2S,mMCA1BI,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAGCC,EAAmB,mCAAG,oGACRF,EAAAA,EAAAA,IAAA,oCAAuCC,IAD/B,cACzBE,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKnBC,EAAc,mCAAG,WAAOC,GAAP,uFACHN,EAAAA,EAAAA,IAAA,gBAAmBM,EAAnB,oBAAsCL,IADnC,cACpBE,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKdG,EAAiB,mCAAG,WAAOC,GAAP,uFACNR,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,kBAA+CO,IADzC,cACvBL,EADuB,yBAEtBA,EAASC,KAAKK,SAFQ,2CAAH,sDAKjBC,EAAiB,mCAAG,WAAOJ,GAAP,uFACNN,EAAAA,EAAAA,IAAA,gBAAmBM,EAAnB,4BAA8CL,IADxC,cACvBE,EADuB,yBAEtBA,EAASC,KAAKO,MAFQ,2CAAH,sDAKjBC,EAAiB,mCAAG,WAAON,GAAP,uFACNN,EAAAA,EAAAA,IAAA,gBAAmBM,EAAnB,oCAAsDL,IADhD,cACvBE,EADuB,yBAEtBA,EAASC,KAAKK,SAFQ,2CAAH,qD,kKCvBjBI,EAAe,SAAC,GAA4B,IAAdC,EAAa,EAAzBC,WAC3B,OACI,SAAC,IAAD,UACKD,EACGA,EAAOE,KAAI,SAAAC,GAAI,OAAK,SAACnC,EAAA,EAAD,CAAiCC,MAAOkC,GAAhBA,EAAK/B,GAAlC,IACb,MAGjB,E,6BCTYgC,E,QAAQtB,GAAAA,GAAH,2ICKH,SAASuB,IACpB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAON,EAAP,KAAeO,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,WAAS,GAAnC,eAAOI,EAAP,KAAcC,EAAd,KAuBA,OArBAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,oGAGQH,GAAW,GACXE,GAAS,GAJjB,UAMqCvB,EAAAA,EAAAA,MANrC,OAMcyB,EANd,OAOQN,EAAUM,GAPlB,gDAUQF,GAAS,GAVjB,yBAYQF,GAAW,GAZnB,qFADY,uBAAC,WAAD,wBAiBZK,EAEH,GAAE,KAGC,4BACI,SAACV,EAAD,UAAO,mBAENI,IAAW,SAACO,EAAA,EAAD,IACXL,IAAS,SAACM,EAAA,EAAD,KAEV,SAACjB,EAAD,CAAcE,WAAYD,EAAOL,YAG5C,C","sources":["components/MovieShortDetails/MovieShortDetails.jsx","components/MovieShortDetails/MovieShortDetails.styled.js","components/MoviesList/MoviesList.styled.js","moviesAPI.js","components/TrendingList/TrendingList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\nimport { GalleryItem, ItemImage, ItemTitle } from \"./MovieShortDetails.styled\";\n\nexport const MovieShortDetails = ({ movie: { title, name, id, poster_path } }) => {\n\n    const location = useLocation();\n    \n    const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n    const defaultImg = 'https://www.reelviews.net/resources/img/default_poster.jpg';\n\n    return (\n        <GalleryItem>\n            <Link to={`/movies/${id}`} state={{ from: location }} >\n                <ItemImage src={poster_path ? (IMG_URL + poster_path) : defaultImg} alt={title || name} />\n                <ItemTitle>{title || name}</ItemTitle>\n            </Link>\n        </GalleryItem>\n    );\n};","import styled from \"styled-components\";\n\nexport const GalleryItem = styled.li`\n    border-radius: 8px;\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.22),\n                0px 1px 1px 0px rgba(0, 0, 0, 0.16), \n                0px 2px 1px -1px rgba(0, 0, 0, 0.14);\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    object-fit: cover;\n\n\n    &:hover {\n        transform: scale(1.05);\n    };\n`;\n\nexport const ItemImage = styled.img`\n    width: 100%;\n    border-radius: 8px;\n`;\n\nexport const ItemTitle = styled.h2`\n    font-size: 24px;\n    font-weight: bold;\n    text-align: center;\n    margin: 12px auto;\n    color: #fff;\n`;\n\n","import styled from \"styled-components\";\n\nexport const ImagesGallery = styled.ul`\n    display: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n    grid-gap: 16px;\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 0;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n`;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = \"fc9b2ba3c1d7d66208afaa93dbd87a11\";\n\n\nexport const fetchTrendingMovies = async () => {\n    const responce = await axios.get(`trending/all/week?api_key=${KEY}`);\n    return responce.data;\n};\n\nexport const fetchMovieByID = async (movieID) => {\n    const responce = await axios.get(`movie/${movieID}?api_key=${KEY}`);\n    return responce.data;\n};\n\nexport const fetchSearchMovies = async (query) => {\n    const responce = await axios.get(`search/movie?api_key=${KEY}&query=${query}`);\n    return responce.data.results;\n};\n\nexport const fetchMovieCredits = async (movieID) => {\n    const responce = await axios.get(`movie/${movieID}/credits?api_key=${KEY}`);\n    return responce.data.cast;\n};\n\nexport const fetchMovieReviews = async (movieID) => {\n    const responce = await axios.get(`movie/${movieID}/reviews?&page=1&api_key=${KEY}`);\n    return responce.data.results;\n};","import { ImagesGallery } from \"components/MoviesList/MoviesList.styled\";\nimport { MovieShortDetails } from \"../MovieShortDetails/MovieShortDetails\";\n\nexport const TrendingList = ({ moviesList: movies }) => {\n    return (\n        <ImagesGallery>\n            {movies ?\n                movies.map(item => (<MovieShortDetails key={item.id} movie={item} />))\n                : null}\n        </ImagesGallery>\n    );\n};","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n    text-align: center;\n    font-weight: 800;\n    letter-spacing: 0.2em;\n    padding: 12px;\n    margin: 12px;\n`;","import { Loader } from \"components/Loader/Loader\";\nimport { NotFound } from \"components/NotFound/NotFound\";\nimport { TrendingList } from \"components/TrendingList/TrendingList\";\nimport { fetchTrendingMovies } from \"moviesAPI\";\nimport { useEffect, useState } from \"react\"\nimport { Title } from \"./Home.styled\";\n\nexport default function Home() {\n    const [movies, setMovies] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        async function getTrendingMovies() {\n            try {\n\n                setLoading(true);\n                setError(false);\n\n                const trendingMovies = await fetchTrendingMovies();\n                setMovies(trendingMovies);\n                \n            } catch (error) {\n                setError(true);\n            } finally {\n                setLoading(false);\n            };\n        };\n\n        getTrendingMovies();\n\n    }, []);\n    \n    return (\n        <div>\n            <Title>TRENDING TODAY</Title>\n\n            {loading && <Loader />}\n            {error && <NotFound />}\n            \n            <TrendingList moviesList={movies.results} />\n        </div>\n    );\n};"],"names":["MovieShortDetails","movie","title","name","id","poster_path","location","useLocation","to","state","from","src","alt","GalleryItem","styled","ItemImage","ItemTitle","ImagesGallery","axios","KEY","fetchTrendingMovies","responce","data","fetchMovieByID","movieID","fetchSearchMovies","query","results","fetchMovieCredits","cast","fetchMovieReviews","TrendingList","movies","moviesList","map","item","Title","Home","useState","setMovies","loading","setLoading","error","setError","useEffect","trendingMovies","getTrendingMovies","Loader","NotFound"],"sourceRoot":""}