{"version":3,"file":"static/js/382.048d46a7.chunk.js","mappings":"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","sources":["components/BackLink/MainButton.js","components/NotFound/NotFound.styled.js","components/NotFound/NotFound.jsx","moviesAPI.js","components/BackLink/BackLink.jsx","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MainButton = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 12px;\n    min-width: 180px;\n    font-size: 20px;\n    line-height: 24px;\n    font-weight: 600;\n    padding: 8px 16px;\n    border-radius: 8px;\n    color: #fff;\n    background-color: inherit;\n    cursor: pointer;\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.22),\n                0px 2px 2px 0px rgba(0, 0, 0, 0.16), \n                0px 1px 5px 0px rgba(0, 0, 0, 0.14);\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover,\n    &:focus {\n        color: #FFA500;\n        transform: scale(1.05);\n    }\n`;","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ErrorPage = styled.div`\n    text-align: center;\n    margin-top: 100px;\n`;\n\nexport const ErrorTitle = styled.h2`\n    font-size: 2rem;\n    color: #FF0000;\n`;\n\nexport const ErrorMessage = styled.p`\n  font-size: 1rem;\n  margin-top: 20px;\n`;\n\nexport const HomeLink = styled(Link)`\n  text-decoration: underline;\n  color: #0073e6;\n`;","import { ErrorMessage, ErrorPage, ErrorTitle, HomeLink } from \"./NotFound.styled\";\n\nexport const NotFound = () => {\n    return (\n        <ErrorPage>\n            <h3>Unknown Error occurred.</h3>\n            <ErrorTitle>Page not found!</ErrorTitle>\n            <ErrorMessage>\n                We're sorry you ended up here. Try refreshing the page or return to <HomeLink to={'/'}>Home</HomeLink>.\n            </ErrorMessage>\n        </ErrorPage>\n    );\n};","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = \"fc9b2ba3c1d7d66208afaa93dbd87a11\";\n\n\nexport const fetchTrendingMovies = async () => {\n    const responce = await axios.get(`trending/all/week?api_key=${KEY}`);\n    return responce.data;\n};\n\nexport const fetchMovieByID = async (movieID) => {\n    const responce = await axios.get(`movie/${movieID}?api_key=${KEY}`);\n    return responce.data;\n};\n\nexport const fetchSearchMovies = async (query) => {\n    const responce = await axios.get(`search/movie?api_key=${KEY}&query=${query}`);\n    return responce.data.results;\n};\n\nexport const fetchMovieCredits = async (movieID) => {\n    const responce = await axios.get(`movie/${movieID}/credits?api_key=${KEY}`);\n    return responce.data.cast;\n};\n\nexport const fetchMovieReviews = async (movieID) => {\n    const responce = await axios.get(`movie/${movieID}/reviews?&page=1&api_key=${KEY}`);\n    return responce.data.results;\n};","import { Link } from \"react-router-dom\";\nimport { MainButton } from \"./MainButton\";\nimport { HiArrowLeftCircle } from \"react-icons/hi2\";\n\n\nexport const BackLink = ({ to = '/' }) => {\n    return (\n        <Link to={to}>\n            <MainButton> <HiArrowLeftCircle/> Go back</MainButton>\n        </Link>\n    );\n};","import styled from 'styled-components';\n\nexport const MovieCard = styled.div`\n    display: flex;\n    gap: 30px;\n    padding-bottom: 24px;\n    border-bottom: 2px solid #ECECEC;\n`;\n\nexport const MovieImage = styled.img`\n    min-width: 400px;\n    border-radius: 10px;\n    outline: 4px solid #FFA500;\n`;\n\nexport const MovieDesc = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    padding-top: 10px;\n`;\n\nexport const Title = styled.h2`\n    color: #FFA500;\n    font-weight: 800;\n\n`;\n\nexport const Subtitle = styled.h3`\n    color: #FFA500;\n    font-weight: 700;\n\n`;\n\nexport const Overview = styled.p`\n    max-width: 66%;\n`;","import { useLocation } from \"react-router-dom\";\nimport { BackLink } from \"../BackLink/BackLink\";\nimport { useRef } from \"react\";\nimport { MovieCard, MovieDesc, MovieImage, Overview, Subtitle, Title } from \"./MovieInfo.styled\";\n\nexport const MovieInfo = ({\n    info: {\n        title,\n        poster_path,\n        release_date,\n        vote_average,\n        overview,\n        name,\n        genres }\n}) => {\n    const location = useLocation();\n    const backLinkLocationRef = useRef(location.state?.from ?? '/');\n    \n    const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n    const defaultImg = 'https://www.reelviews.net/resources/img/default_poster.jpg';\n\n\n    return (\n        <>\n            <BackLink to={backLinkLocationRef.current} />\n\n            <MovieCard>\n                <MovieImage\n                    src={poster_path ? (IMG_URL + poster_path) : defaultImg}\n                    alt={title || name}\n                />\n\n                <MovieDesc>\n                    <Title>{title || name}</Title>\n\n                    <p>Rating: {vote_average}</p>\n                    <p>Release date: {release_date}</p>\n\n                    <Subtitle>Overview</Subtitle>\n                    <Overview>{overview}</Overview>\n\n                    <Subtitle>Genres</Subtitle>\n                    <p>{genres.map(item => item.name).join(' ')}</p>\n                </MovieDesc>\n            </MovieCard>\n        </>\n    );\n};","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Title = styled.h2`\n    font-weight: 700;\n    font-size: 24px;\n    letter-spacing: 0.15em;\n    padding: 8px;\n    margin: 8px;\n`;\n\nexport const ListAdditionalInfo = styled.ul`\n    display: flex;\n    align-items: baseline;\n    gap: 16px;\n    margin-left: 16px;\n`;\n\nexport const AdditionalInfo = styled(NavLink)`\n    font-size: 18px;\n    font-weight: 600;\n    letter-spacing: 0.15em;\n    color: #fff;\n        \n    &.active {\n        padding: 8px;\n        border: 2px solid #FFA500;\n        border-radius: 8px;\n        color: #FFA500;\n    };\n        \n    &:hover {\n        transform: scale(1.05);\n    };\n`;","import { Suspense } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Outlet, useParams } from \"react-router-dom\";\nimport { fetchMovieByID } from \"moviesAPI\";\nimport { MovieInfo } from \"components/MovieInfo/MovieInfo\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { NotFound } from \"components/NotFound/NotFound\";\nimport { AdditionalInfo, ListAdditionalInfo, Title } from \"./MovieDetails.styled\";\n\nexport default function MovieDetails() {\n    const { movieID } = useParams();\n    const [movie, setMovie] = useState();\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        async function getMovie() {\n            try {\n\n                setLoading(true);\n                setError(false);\n\n                const infoMovie = await fetchMovieByID(movieID);\n                setMovie(infoMovie);\n                \n            } catch (error) {\n                setError(true);\n            } finally {\n                setLoading(false);\n            };\n        };\n\n        getMovie();\n\n    }, [movieID]);\n\n    return (\n        <>\n            {loading && <Loader />}\n            {error && <NotFound />}\n\n            {movie && <MovieInfo info={movie} />}\n\n            <div>\n                <Title>Additional information</Title>\n                <ListAdditionalInfo>\n                    <AdditionalInfo to=\"cast\">Cast</AdditionalInfo>\n                    <AdditionalInfo to=\"reviews\">Reviews</AdditionalInfo>\n                </ListAdditionalInfo>\n\n                <Suspense fallback={<Loader />}>\n                    <Outlet />\n                </Suspense>\n            </div>\n        </>\n    );\n};"],"names":["MainButton","styled","ErrorPage","ErrorTitle","ErrorMessage","HomeLink","Link","NotFound","to","axios","KEY","fetchTrendingMovies","responce","data","fetchMovieByID","movieID","fetchSearchMovies","query","results","fetchMovieCredits","cast","fetchMovieReviews","BackLink","MovieCard","MovieImage","MovieDesc","Title","Subtitle","Overview","MovieInfo","info","title","poster_path","release_date","vote_average","overview","name","genres","location","useLocation","backLinkLocationRef","useRef","state","from","current","src","alt","map","item","join","ListAdditionalInfo","AdditionalInfo","NavLink","MovieDetails","useParams","useState","movie","setMovie","loading","setLoading","error","setError","useEffect","infoMovie","getMovie","Loader","Suspense","fallback"],"sourceRoot":""}