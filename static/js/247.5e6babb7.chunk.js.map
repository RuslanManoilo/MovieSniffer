{"version":3,"file":"static/js/247.5e6babb7.chunk.js","mappings":"iRAMe,SAASA,IACpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACA,GAA0BN,EAAAA,EAAAA,WAAS,GAAnC,eAAOO,EAAP,KAAcC,EAAd,KAIMC,EAAcN,EAAUF,EAAOA,EAAKS,MAAM,EAAG,KAEnDC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,oGAGQL,GAAW,GACXE,GAAS,GAJjB,UAMgCI,EAAAA,EAAAA,IAAkBd,GANlD,OAMce,EANd,OAOQX,EAAQW,GAPhB,gDAUQL,GAAS,GAVjB,yBAYQF,GAAW,GAZnB,qFADY,uBAAC,WAAD,wBAiBZQ,EAEH,GAAE,CAAChB,IAMJ,OACI,gCACKO,IAAW,SAAC,IAAD,IACXE,IAAS,SAAC,IAAD,KAEV,wBACKE,EAAYM,OAAS,GAClBN,EAAYO,KAAI,SAAAC,GAAI,OAChB,2BACI,gBAAKC,IAAKD,EAAKE,aAtCvB,kCAsCiDF,EAAKE,aArCnD,8FAqC+EC,IAAKH,EAAKI,KAAMC,MAAO,MACjG,wBAAKL,EAAKI,QACV,yBAAG,cAAgC,KAAnBJ,EAAKM,UAAmB,QAAUN,EAAKM,eAHlDN,EAAKO,GADE,MAU3BvB,EAAKc,OAAS,KACX,mBAAQU,QAtBG,WACnBrB,GAAYD,EACf,EAoBW,SACKA,EAAU,OAAS,gBAKvC,C,+LChEDuB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAGCC,EAAmB,mCAAG,oGACRF,EAAAA,EAAAA,IAAA,oCAAuCC,IAD/B,cACzBE,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKnBC,EAAc,mCAAG,WAAOjC,GAAP,uFACH4B,EAAAA,EAAAA,IAAA,gBAAmB5B,EAAnB,oBAAsC6B,IADnC,cACpBE,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKdE,EAAiB,mCAAG,WAAOC,GAAP,uFACNP,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,kBAA+CM,IADzC,cACvBJ,EADuB,yBAEtBA,EAASC,KAAKI,SAFQ,2CAAH,sDAKjBtB,EAAiB,mCAAG,WAAOd,GAAP,uFACN4B,EAAAA,EAAAA,IAAA,gBAAmB5B,EAAnB,4BAA8C6B,IADxC,cACvBE,EADuB,yBAEtBA,EAASC,KAAK7B,MAFQ,2CAAH,sDAKjBkC,EAAiB,mCAAG,WAAOrC,GAAP,uFACN4B,EAAAA,EAAAA,IAAA,gBAAmB5B,EAAnB,oCAAsD6B,IADhD,cACvBE,EADuB,yBAEtBA,EAASC,KAAKI,SAFQ,2CAAH,qD","sources":["components/Cast/Cast.jsx","moviesAPI.js"],"sourcesContent":["import { Loader } from \"components/Loader/Loader\";\nimport { NotFound } from \"components/NotFound/NotFound\";\nimport { fetchMovieCredits } from \"moviesAPI\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function Cast() {\n    const { movieID } = useParams();\n    const [cast, setCast] = useState([]);\n    const [showAll, setShowAll] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n    const defaultImg = 'https://static-00.iconduck.com/assets.00/avatar-default-symbolic-icon-960x1024-49eypb0d.png';\n    const visibleCast = showAll ? cast : cast.slice(0, 15);\n\n    useEffect(() => {\n        async function getMovieCredits() {\n            try {\n\n                setLoading(true);\n                setError(false);\n\n                const castMovie = await fetchMovieCredits(movieID);\n                setCast(castMovie);\n\n            } catch (error) {\n                setError(true);\n            } finally {\n                setLoading(false);\n            };\n        };\n\n        getMovieCredits();\n        \n    }, [movieID]);\n\n    const handlerShowAll = () => {\n        setShowAll(!showAll);\n    };\n\n    return (\n        <>\n            {loading && <Loader />}\n            {error && <NotFound />}\n\n            <ul>\n                {visibleCast.length > 0 && (\n                    visibleCast.map(item => (\n                        <li key={item.id}>\n                            <img src={item.profile_path ? (IMG_URL + item.profile_path) : defaultImg} alt={item.name} width={90} />\n                            <h3>{item.name}</h3>\n                            <p>Character: {(item.character === \"\" ? \"Other\" : item.character)}</p>\n                        </li>\n                    ))\n                )}\n            </ul>\n\n            {cast.length > 15 && (\n                <button onClick={handlerShowAll}>\n                    {showAll ? \"Hide\" : \"Show more\"}\n                </button>\n            )}\n        </>\n    );\n};","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = \"fc9b2ba3c1d7d66208afaa93dbd87a11\";\n\n\nexport const fetchTrendingMovies = async () => {\n    const responce = await axios.get(`trending/all/week?api_key=${KEY}`);\n    return responce.data;\n};\n\nexport const fetchMovieByID = async (movieID) => {\n    const responce = await axios.get(`movie/${movieID}?api_key=${KEY}`);\n    return responce.data;\n};\n\nexport const fetchSearchMovies = async (query) => {\n    const responce = await axios.get(`search/movie?api_key=${KEY}&query=${query}`);\n    return responce.data.results;\n};\n\nexport const fetchMovieCredits = async (movieID) => {\n    const responce = await axios.get(`movie/${movieID}/credits?api_key=${KEY}`);\n    return responce.data.cast;\n};\n\nexport const fetchMovieReviews = async (movieID) => {\n    const responce = await axios.get(`movie/${movieID}/reviews?&page=1&api_key=${KEY}`);\n    return responce.data.results;\n};"],"names":["Cast","movieID","useParams","useState","cast","setCast","showAll","setShowAll","loading","setLoading","error","setError","visibleCast","slice","useEffect","fetchMovieCredits","castMovie","getMovieCredits","length","map","item","src","profile_path","alt","name","width","character","id","onClick","axios","KEY","fetchTrendingMovies","responce","data","fetchMovieByID","fetchSearchMovies","query","results","fetchMovieReviews"],"sourceRoot":""}